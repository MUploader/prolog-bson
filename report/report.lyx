#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Design and Implementation of a MongoDB Driver for Prolog
\end_layout

\begin_layout Author
Sebastian Lundstr√∂m
\end_layout

\begin_layout Abstract
Prolog is good stuff, and MongoDB ...
\end_layout

\begin_layout Abstract
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
From spec:
\end_layout

\begin_layout Standard
[MongoDB is a young document-oriented database system that has started to
 gain much attention recently.
 Document-orientation involves removing rigid database schemas and advanced
 transactions, in favor of flexibility.
 Document-orientation also promotes a certain degree of denormalization
 which allows embedding documents into each other, leading to potentially
 much better performance by avoiding the need for expensive join operations.
\end_layout

\begin_layout Standard
Prolog, being an untyped language, agrees with the document-oriented approach
 of relaxing manifests in order to create more dynamic and flexible systems.
 Embedding terms in other terms is natural in Prolog, and embedding documents
 in other documents is natural in MongoDB.
\end_layout

\begin_layout Standard
Many drivers exist, both official and unofficial, that enable the use of
 Mongo\SpecialChar \-
DB from various programming languages.
 At the time of writing, no such driver for Prolog seems to exist.]
\end_layout

\begin_layout Section
MongoDB
\end_layout

\begin_layout Standard
XXX
\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Standard
From spec:
\end_layout

\begin_layout Standard
[Creating a driver that is usable with, or at least easily portable to,
 other Prolog environments is desirable, but development and testing will
 focus on SWI-Prolog.
\end_layout

\begin_layout Standard
More complex features of Mongo\SpecialChar \-
DB, such as advanced connection management
 and GridFS, will not be implemented.]
\end_layout

\begin_layout Section
Method (necessary?)
\end_layout

\begin_layout Standard
Research other drivers, docs.
\end_layout

\begin_layout Standard
Test-driven development.
\end_layout

\begin_layout Section
Requirements
\end_layout

\begin_layout Standard
Various requirements on the implementation.
 See for example
\end_layout

\begin_layout Standard
http://www.mongodb.org/display/DOCS/Writing+Drivers+and+Tools
\end_layout

\begin_layout Section
Design
\end_layout

\begin_layout Itemize
BSON encoder/decoder
\end_layout

\begin_deeper
\begin_layout Itemize
Some parts written in C.
 Why? (Basically didn't know how to easily handle bytes-to-float in Prolog.
 And perhaps some efficiency.)
\end_layout

\begin_layout Itemize
Discuss data structures, term [key:value] maps to bytelist [4,1,7,9,3,...]
 etc.
\end_layout

\begin_layout Itemize
Design choices: text as atoms (why not list of codes, [97,98,99]?) Inspired
 slightly by JSON parser: http://www.swi-prolog.org/pldoc/doc_for?object=section%2
83,%275.1%27,swi%28%27/doc/packages/http.html%27%29%29
\end_layout

\end_deeper
\begin_layout Itemize
Network communication
\end_layout

\begin_deeper
\begin_layout Itemize
How does the communication work? How simplistic is the communication administrat
ion? Sockets, connections, etc.
\end_layout

\end_deeper
\begin_layout Itemize
MongoDB API
\end_layout

\begin_deeper
\begin_layout Itemize
Thoroughly discuss design of wrapper API, how lists and structures are represent
ed etc.
 What algorithms are used etc.
\end_layout

\end_deeper
\begin_layout Section
Implementation
\end_layout

\begin_layout Standard
How do I solve it?
\end_layout

\begin_layout Section
Evaluation
\end_layout

\begin_layout Standard
Did it work? Is it usable? What should have been done differently?
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
Compare to existing drivers? Erlang? And something completely different?
\end_layout

\begin_layout Section
Conclusion/Future Work
\end_layout

\begin_layout Standard
Not sure how much this section relates to Evaluation above.
\end_layout

\begin_layout Standard
Portability (Tested on Mac, SWI, GCC/Clang, etc.)? Efficiency? How to improve
 in the future? Critical parts (BSON) in pure C? Even write a C extension
 with more/most functionality? Don't know how portable that would be though,
 but SWI (and probably SICStus also?) has a mature interface to C.
 What is missing for it to be a 
\begin_inset Quotes eld
\end_inset

real
\begin_inset Quotes erd
\end_inset

 driver?
\end_layout

\begin_layout Section
References
\end_layout

\begin_layout Standard
References for Prolog DCG? References for various stuff used in SWI? At
 all relevant? How much web references? Most MongoDB driver stuff is web.
\end_layout

\begin_layout Standard
Chodorow, K.
 & Dirolf, M.
 (2010) 
\emph on
MongoDB: The Definitive Guide.

\emph default
 Sebastopol, United States of America: O'Reilly Media, Inc.
\end_layout

\end_body
\end_document
