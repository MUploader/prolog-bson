#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Design and Implementation of a MongoDB Driver for Prolog
\end_layout

\begin_layout Author
Sebastian Lundstr√∂m
\end_layout

\begin_layout Abstract
[Prolog is good stuff, and MongoDB ...]
\end_layout

\begin_layout Abstract
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard

\emph on
[Write this section, or at least finalize it, near the end.]
\end_layout

\begin_layout Standard

\emph on
From spec:
\end_layout

\begin_layout Standard

\emph on
[MongoDB is a young document-oriented database system that has started to
 gain much attention recently.
 Document-orientation involves removing rigid database schemas and advanced
 transactions, in favor of flexibility.
 Document-orientation also promotes a certain degree of denormalization
 which allows embedding documents into each other, leading to potentially
 much better performance by avoiding the need for expensive join operations.
\end_layout

\begin_layout Standard

\emph on
Prolog, being an untyped language, agrees with the document-oriented approach
 of relaxing manifests in order to create more dynamic and flexible systems.
 Embedding terms in other terms is natural in Prolog, and embedding documents
 in other documents is natural in MongoDB.
\end_layout

\begin_layout Standard

\emph on
Many drivers exist, both official and unofficial, that enable the use of
 Mongo\SpecialChar \-
DB from various programming languages.
 At the time of writing, no such driver for Prolog seems to exist.]
\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Standard
The aim of this thesis is not to create a feature-complete production-ready
 driver, but to cover basic CRUD (Create, Read, Update, Delete) functionality
 and connection handling, laying the foundation for further development.
 More advanced MongoDB features such as 
\begin_inset Quotes eld
\end_inset

sharding
\begin_inset Quotes erd
\end_inset

 [xxx replica sets?] and GridFS are therefore not covered.
\end_layout

\begin_layout Standard
Due to the lack of proper standardization within the Prolog community, maintaini
ng portability between different Prolog implementations is difficult and
 not pursued.
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Standard
This chapter briefly discusses MongoDB and Prolog.
 
\emph on
XXX where discuss why prolog needs this driver? prolog is its own database,
 but using the inbuilt database for advanced applications is probably not
 that great [ref? research this].
 using a separate database system moves the database logic from the prolog
 application = good, and promotes easy replication etc.
\end_layout

\begin_layout Subsection
MongoDB
\end_layout

\begin_layout Standard
[Ref: MongoDB: The Definitive Guide, p 4]
\end_layout

\begin_layout Standard
MongoDB is a document-oriented database management system that emphasizes
 speed, scalability and flexibility.
 This is accomplished by sacrificing fixed database schemas and, by avoiding
 joins, requiring a certain degree of denormalization by embedding documents
 into each other.
\end_layout

\begin_layout Subsubsection
Document-Oriented vs.
 Relational Databases
\end_layout

\begin_layout Standard
XXX Discuss what doc-oriented is trying to change with respect to relational.
 Fundamental differences, how MongoDB does them differently, and why.
\end_layout

\begin_layout Paragraph
Low Maintenance
\end_layout

\begin_layout Standard
XXX out of the way, no schemas, add/remove fields from individual documents
 easy ...
\end_layout

\begin_layout Paragraph
Scalability
\end_layout

\begin_layout Standard
XXX designed from scratch to allow easy 
\begin_inset Quotes eld
\end_inset

scaling out
\begin_inset Quotes erd
\end_inset

 - just add new comps and let the database figure things out, distribute,
 ...
\end_layout

\begin_layout Subsection
Prolog
\end_layout

\begin_layout Standard
Prolog is an interpreted dynamic language with its roots in logic.
 It is also a declarative language, implying that the programmer specifies
 
\emph on
what
\emph default
 the program is supposed to solve, not 
\emph on
how
\emph default
.
\end_layout

\begin_layout Subsubsection
Type System
\end_layout

\begin_layout Standard
The type system used in Prolog is dynamic, and the fundamental data type
 is the 
\begin_inset Quotes eld
\end_inset

term
\begin_inset Quotes erd
\end_inset

, which can be any value.
 A variable can be bound to any term, but once bound, it is immutable and
 cannot be rebound.
\end_layout

\begin_layout Subsubsection
Unification?
\end_layout

\begin_layout Standard
XXX what the heck am i writing?
\end_layout

\begin_layout Section
Requirements
\end_layout

\begin_layout Standard
[Ref: http://www.mongodb.org/display/DOCS/Mongo+Driver+Requirements]
\end_layout

\begin_layout Subsection
BSON Serialization and Deserialization
\end_layout

\begin_layout Standard
[Ref: http://bsonspec.org/]
\end_layout

\begin_layout Standard
The data representation format used by MongoDB is a binary-encoded variation
 of JSON, called BSON (Binary JSON).
 In MongoDB, BSON is the format used to store data on disk as well as transmit
 data over the network.
\end_layout

\begin_layout Standard
The driver must be able to convert back and forth between some kind of Prolog
 structure and BSON bytes.
\end_layout

\begin_layout Subsection
Fundamental Database Operations
\end_layout

\begin_layout Standard
The driver must expose functionality to find, insert, update and delete
 documents in the database.
\end_layout

\begin_layout Section
Design
\end_layout

\begin_layout Standard
At the core of MongoDB lies the BSON (Binary JSON) binary data format.
 BSON is used in MongoDB to communicate data as well as store documents
 on disk.
\end_layout

\begin_layout Itemize
BSON encoder/decoder
\end_layout

\begin_deeper
\begin_layout Itemize
Some parts written in C.
 Why? (Basically didn't know how to easily handle bytes-to-float in Prolog.
 And perhaps some efficiency.)
\end_layout

\begin_layout Itemize
Discuss data structures, term [key:value] maps to bytelist [4,1,7,9,3,...]
 etc.
\end_layout

\begin_layout Itemize
Design choices: text as atoms (why not list of codes, [97,98,99]?) Inspired
 slightly by JSON parser: http://www.swi-prolog.org/pldoc/doc_for?object=section%2
83,%275.1%27,swi%28%27/doc/packages/http.html%27%29%29
\end_layout

\end_deeper
\begin_layout Itemize
Network communication
\end_layout

\begin_deeper
\begin_layout Itemize
How does the communication work? How simplistic is the communication administrat
ion? Sockets, connections, etc.
\end_layout

\end_deeper
\begin_layout Itemize
MongoDB API
\end_layout

\begin_deeper
\begin_layout Itemize
Thoroughly discuss design of wrapper API, how lists and structures are represent
ed etc.
 What algorithms are used etc.
\end_layout

\end_deeper
\begin_layout Section
Implementation
\end_layout

\begin_layout Standard

\emph on
[xxx How do I solve it?]
\end_layout

\begin_layout Section
Evaluation
\end_layout

\begin_layout Standard

\emph on
[xxx Did it work? Is it usable? What should have been done differently?]
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard

\emph on
[xxx Compare to existing drivers? Erlang? And something completely different?]
\end_layout

\begin_layout Section
Conclusion/Future Work [what to call it?]
\end_layout

\begin_layout Standard

\emph on
[xxx Not sure how much this section relates to Evaluation above.
\end_layout

\begin_layout Standard

\emph on
Portability (Tested on Mac, SWI, GCC/Clang, etc.)? Efficiency? How to improve
 in the future? Critical parts (BSON) in pure C? Even write a C extension
 with more/most functionality? Don't know how portable that would be though,
 but SWI (and probably SICStus?) has a mature interface to C.
 What is missing for it to be a 
\begin_inset Quotes eld
\end_inset

real
\begin_inset Quotes erd
\end_inset

 driver?]
\end_layout

\begin_layout Section
References
\end_layout

\begin_layout Standard

\emph on
[xxx References for Prolog DCG? References for various stuff used in SWI?
 At all relevant? How much web references? Most MongoDB driver stuff is
 web.]
\end_layout

\begin_layout Subsection
Books
\end_layout

\begin_layout Standard

\emph on
[xxx currently unreferenced]
\emph default
 Chodorow, K.
 & Dirolf, M.
 (2010) 
\emph on
MongoDB: The Definitive Guide.

\emph default
 Sebastopol, United States of America: O'Reilly Media, Inc.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
[xxx currently unreferenced]
\emph default
 Bratko, I.
 (2001) 
\emph on
PROLOG Programming for Artificial Intelligence.

\emph default
 3rd ed.
 Essex, England: Pearson Education Limited.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
[xxx currently unreferenced]
\emph default
 O'Keefe, R.
 A.
 (1990) 
\emph on
The Craft of Prolog.

\emph default
 Cambridge, United States of America: The MIT Press.
\end_layout

\begin_layout Subsection
Technical Documentation
\end_layout

\begin_layout Standard

\emph on
[xxx currently unreferenced]
\emph default
 MongoDB Driver Documentation
\begin_inset Newline newline
\end_inset

http://www.mongodb.org/display/DOCS/Drivers
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
[xxx currently unreferenced]
\emph default
 BSON Specification
\begin_inset Newline newline
\end_inset

http://bsonspec.org/
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph on
[xxx currently unreferenced]
\emph default
 SWI-Prolog Documentation
\begin_inset Newline newline
\end_inset

http://www.swi-prolog.org/pldoc/
\end_layout

\end_body
\end_document
